import java.util.Arrays;
import java.util.Comparator;

class Solution {
    public int[] kWeakestRows(int[][] mat, int k) {
        
        int[] sums = new int[mat.length];
        for(int i=0; i< mat.length; i++) {
            for(int j=0; j<mat[0].length; j++) {
                sums[i] = sums[i] + mat[i][j]; 
            }
        }
        
        IndexValue[] indexValue = new IndexValue[sums.length];
        for(int i=0; i<sums.length; i++) {
            indexValue[i] = new IndexValue(i, sums[i]);
        }
        
        Arrays.sort(indexValue, new Comparator<IndexValue>()  {
            public int compare(IndexValue a, IndexValue b) {
                if ( a.v == b.v ) {
                    return (a.i - b.i);
                }
                return a.v - b.v;
            }
        });
        
        int[] ans = new int[k];
        for(int i=0; i<k; i++) {
            ans[i] = indexValue[i].i;
        }
        
        return ans;
        
    }
}

class IndexValue {
    final int i;
    final int v;
    
    IndexValue(int i, int v) {
        this.i = i;
        this.v = v;
    }
    
}
